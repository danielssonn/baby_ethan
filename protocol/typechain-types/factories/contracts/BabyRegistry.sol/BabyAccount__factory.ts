/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BabyAccount,
  BabyAccountInterface,
} from "../../../contracts/BabyRegistry.sol/BabyAccount";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BabyRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107b2806101146000396000f3fe6080604052600436106100705760003560e01c8063715018a61161004e578063715018a6146100ce5780638da5cb5b146100e5578063b6b55f2514610110578063f2fde38b1461012c57610070565b806312065fe0146100755780633ccfd60b146100a05780635624ab95146100b7575b600080fd5b34801561008157600080fd5b5061008a610155565b60405161009791906104d3565b60405180910390f35b3480156100ac57600080fd5b506100b5610165565b005b3480156100c357600080fd5b506100cc61025d565b005b3480156100da57600080fd5b506100e36102a0565b005b3480156100f157600080fd5b506100fa6102b4565b604051610107919061052f565b60405180910390f35b61012a6004803603810190610125919061057b565b6102dd565b005b34801561013857600080fd5b50610153600480360381019061014e91906105d4565b6102ec565b005b600061015f610370565b47905090565b600260015414156101ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a29061065e565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020d57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610253573d6000803e3d6000fd5b5060018081905550565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6102a8610370565b6102b260006103ee565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8034146102e957600080fd5b50565b6102f4610370565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035b906106f0565b60405180910390fd5b61036d816103ee565b50565b6103786104b2565b73ffffffffffffffffffffffffffffffffffffffff166103966102b4565b73ffffffffffffffffffffffffffffffffffffffff16146103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e39061075c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b6104cd816104ba565b82525050565b60006020820190506104e860008301846104c4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610519826104ee565b9050919050565b6105298161050e565b82525050565b60006020820190506105446000830184610520565b92915050565b600080fd5b610558816104ba565b811461056357600080fd5b50565b6000813590506105758161054f565b92915050565b6000602082840312156105915761059061054a565b5b600061059f84828501610566565b91505092915050565b6105b18161050e565b81146105bc57600080fd5b50565b6000813590506105ce816105a8565b92915050565b6000602082840312156105ea576105e961054a565b5b60006105f8848285016105bf565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610648601f83610601565b915061065382610612565b602082019050919050565b600060208201905081810360008301526106778161063b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006106da602683610601565b91506106e58261067e565b604082019050919050565b60006020820190508181036000830152610709816106cd565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610746602083610601565b915061075182610710565b602082019050919050565b6000602082019050818103600083015261077581610739565b905091905056fea2646970667358221220c856124da4dd42ef7b55331f11f0ae0ef79a888164e3903562a4cecdfcdcf9a764736f6c63430008090033";

type BabyAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BabyAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BabyAccount__factory extends ContractFactory {
  constructor(...args: BabyAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BabyAccount> {
    return super.deploy(overrides || {}) as Promise<BabyAccount>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BabyAccount {
    return super.attach(address) as BabyAccount;
  }
  override connect(signer: Signer): BabyAccount__factory {
    return super.connect(signer) as BabyAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BabyAccountInterface {
    return new utils.Interface(_abi) as BabyAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BabyAccount {
    return new Contract(address, _abi, signerOrProvider) as BabyAccount;
  }
}
