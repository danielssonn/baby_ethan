/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BabyAccount,
  BabyAccountInterface,
} from "../../contracts/BabyAccount";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b60018081905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106d2806101146000396000f3fe6080604052600436106100555760003560e01c806312065fe01461005a5780632e1a7d4d14610085578063715018a6146100a15780638da5cb5b146100b8578063d0e30db0146100e3578063f2fde38b146100ed575b600080fd5b34801561006657600080fd5b5061006f610116565b60405161007c91906103f3565b60405180910390f35b61009f600480360381019061009a919061043f565b610126565b005b3480156100ad57600080fd5b506100b66101cd565b005b3480156100c457600080fd5b506100cd6101e1565b6040516100da91906104ad565b60405180910390f35b6100eb61020a565b005b3480156100f957600080fd5b50610114600480360381019061010f91906104f4565b61020c565b005b6000610120610290565b47905090565b6002600154141561016c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101639061057e565b60405180910390fd5b600260018190555061017c610290565b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101c2573d6000803e3d6000fd5b506001808190555050565b6101d5610290565b6101df600061030e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b565b610214610290565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027b90610610565b60405180910390fd5b61028d8161030e565b50565b6102986103d2565b73ffffffffffffffffffffffffffffffffffffffff166102b66101e1565b73ffffffffffffffffffffffffffffffffffffffff161461030c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103039061067c565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b6103ed816103da565b82525050565b600060208201905061040860008301846103e4565b92915050565b600080fd5b61041c816103da565b811461042757600080fd5b50565b60008135905061043981610413565b92915050565b6000602082840312156104555761045461040e565b5b60006104638482850161042a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104978261046c565b9050919050565b6104a78161048c565b82525050565b60006020820190506104c2600083018461049e565b92915050565b6104d18161048c565b81146104dc57600080fd5b50565b6000813590506104ee816104c8565b92915050565b60006020828403121561050a5761050961040e565b5b6000610518848285016104df565b91505092915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610568601f83610521565b915061057382610532565b602082019050919050565b600060208201905081810360008301526105978161055b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006105fa602683610521565b91506106058261059e565b604082019050919050565b60006020820190508181036000830152610629816105ed565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610666602083610521565b915061067182610630565b602082019050919050565b6000602082019050818103600083015261069581610659565b905091905056fea26469706673582212203965fdac549f4d272675814f9cfa47ca3d987db9266b93ba4d0cf97ead13fc4f64736f6c63430008090033";

type BabyAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BabyAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BabyAccount__factory extends ContractFactory {
  constructor(...args: BabyAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BabyAccount> {
    return super.deploy(overrides || {}) as Promise<BabyAccount>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BabyAccount {
    return super.attach(address) as BabyAccount;
  }
  override connect(signer: Signer): BabyAccount__factory {
    return super.connect(signer) as BabyAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BabyAccountInterface {
    return new utils.Interface(_abi) as BabyAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BabyAccount {
    return new Contract(address, _abi, signerOrProvider) as BabyAccount;
  }
}
